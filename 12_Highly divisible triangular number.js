/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?
https://projecteuler.net/problem=12
*/

function isPrime(n) {
  for (let i = 2; i <= Math.ceil(Math.sqrt(n)); i++) {
    if (n != 2 && n % i == 0) return false;
  }
  return true;
}

function primeList(num) {
  var primeList = [];
  for (let i = 2; i <= num; i++) {
    if (isPrime(i)) primeList.push(i);
  }
  return primeList;
}

Math.__proto__.MDC = function (num) {
  var MDC = [];
  while (num > 1) {
    for (let i = 0; i < primes.length; i++) {
      if (num % primes[i] == 0) {
        num /= primes[i];
        MDC.push(primes[i]);
        break;
      }
    }
  }
  return MDC;
};

function exponents(arr) {
  var exponents = [];
  var count = 2;

  arr.forEach((num, i, arr) => {
    if (num == arr[i + 1]) {
      count++;
    } else {
      exponents.push(count);
      count = 2;
    }
  });

  return exponents;
}

var triNum = 0;
var primes = primeList(100000);

for (let i = 1; i <= 1e6; i++) {
  triNum += i;
  var expos = exponents(Math.MDC(triNum));
  expos = expos.length ? expos.reduce((a, b) => a * b) : 1;
  if (expos > 500) {
    console.log(triNum);
    break;
  }
}
